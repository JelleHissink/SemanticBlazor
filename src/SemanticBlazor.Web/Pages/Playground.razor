@page "/playground"
@inherits PageBase
@inject Data.DummyDataService dummyData
@*<p>
  <SemTimeInput @bind-Value="timeSpanValue" MinutesEnabled="true" Icon="Icon.Clock" IconPosition="IconPosition.Left"></SemTimeInput>
</p>
<p>
  Value = @timeSpanValue.ToString(@"hh\:mm");
</p>

<p>
  <SemTimeInput @bind-Value="timeSpanValue" MinutesEnabled="false"></SemTimeInput>
</p>
<p>
  Value = @timeSpanValue.ToString(@"hh\:mm");
</p>*@


<p>
  <SemTimeInput @bind-Value="timeSpanNullValue" Clearable="true"></SemTimeInput>
</p>
<p>
  Value = @(timeSpanNullValue?.ToString(@"hh\:mm") ?? "null");
</p>

<p style="max-width: 200px">
  <SemDateTimeInput @bind-Value="dateValue" DateIcon="Icon.Calendar_Alternate_Outline" TimeIcon="Icon.Clock_Outline"></SemDateTimeInput>
</p>
<p>
  Value = @dateValue.ToString("dd.MM.yyyy HH:mm");
</p>

<p style="max-width: 400px">
  <SemDateTimeInput @bind-Value="dateNullValue" Clearable="true"></SemDateTimeInput>
</p>
<p>
  Value = @(dateNullValue?.ToString("dd.MM.yyyy HH:mm") ?? "null");
</p>


@code {
  string selectedStringValue { get; set; }

  class SomeClass
  {
    public string Name { get; set; }
    public int Code { get; set; }
    public string Description { get; set; }

    public override string ToString()
    {
      return $"{Name}, {Code}, {Description}";
    }
  }

  List<SomeClass> items = new List<SomeClass>() {
    new SomeClass() { Name = "Test Name 1", Code = 10, Description = "First Name" },
    new SomeClass() { Name = "Test Name 2", Code = 20, Description = "Second Name" },
    new SomeClass() { Name = "Test Name 3", Code = 30, Description = "Third Name" }
  };

  SomeClass selectedValue { get; set; }
  int selectedIntValue { get; set; } = 10;
  List<SomeClass> selectedValues { get; set; }
  List<int> selectedIntValues { get; set; }

  Data.DummyData selectedDummyData { get; set; }
  int SelectedDummyId { get; set; }
  List<SemanticBlazor.Web.Data.DummyData> dummies = new List<Data.DummyData>();
  async Task<List<Data.DummyData>> GetDummyData() => await dummyData.GetAllDataAsync();

  enum Option
  {
    Option_1,
    Option_2,
    Option_3,
    Option_4
  }
  Option SelectedOption { get; set; }
  List<Option> SelectedOptions { get; set; }

  DateTime dateValue = DateTime.Now;
  DateTime? dateNullValue;
  TimeSpan timeSpanValue = new TimeSpan(10, 30, 00);
  TimeSpan? timeSpanNullValue = new TimeSpan(10, 30, 00);

  protected override async Task OnInitializedAsync()
  {
    dummies = await GetDummyData();
    selectedValue = items[0];
  }

}