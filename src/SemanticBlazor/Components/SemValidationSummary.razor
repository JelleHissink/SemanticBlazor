@using System.Linq.Expressions
@implements IDisposable

@if (EditContext.GetValidationMessages().Any())
{
  <SemMessage Color="MessageColor.Negative">
    <ul class="list">
      @foreach (var message in EditContext.GetValidationMessages())
      {
        <li>@message</li>
      }
    </ul>
  </SemMessage>
}

@code {
  [CascadingParameter] private EditContext EditContext { get; set; }

  protected override void OnInitialized()
  {
    EditContext.OnValidationStateChanged += HandleValidationStateChanged;
  }
  private void HandleValidationStateChanged(object o, ValidationStateChangedEventArgs args) => StateHasChanged();
  public void Dispose()
  {
    EditContext.OnValidationStateChanged -= HandleValidationStateChanged;
  }
}