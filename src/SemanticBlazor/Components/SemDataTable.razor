@typeparam ItemType
@inherits SemListBase<ItemType>

@if (Visible)
{
  @if (currentItems == null)
  {
    <div class="@SegmentClassMapper.ToString()" style="padding: 0px">
      <table class="ui @Class table">
        <thead>
          <tr>
            <th style="width: 10%"><div class="ui placeholder"><div class="paragraph"><div class="short line"></div></div></div></th>
            <th style="width: 15%"><div class="ui placeholder"><div class="paragraph"><div class="short line"></div></div></div></th>
            <th style="width: 30%"><div class="ui placeholder"><div class="paragraph"><div class="short line"></div></div></div></th>
            <th style="width: 10%"><div class="ui placeholder"><div class="paragraph"><div class="short line"></div></div></div></th>
            <th style="width: 20%"><div class="ui placeholder"><div class="paragraph"><div class="short line"></div></div></div></th>
            <th style="width: 10%"><div class="ui placeholder"><div class="paragraph"><div class="short line"></div></div></div></th>
            <th style="width: 5%"><div class="ui placeholder"><div class="paragraph"><div class="short line"></div></div></div></th>
          </tr>
        </thead>
        <tbody>
          @for (int i = 0; i < 5; i++)
          {
            <tr>
              <td style="width: 10%"><div class="ui placeholder"><div class="paragraph"><div class="line"></div></div></div></td>
              <td style="width: 15%"><div class="ui placeholder"><div class="paragraph"><div class="line"></div></div></div></td>
              <td style="width: 30%"><div class="ui placeholder"><div class="paragraph"><div class="line"></div></div></div></td>
              <td style="width: 10%"><div class="ui placeholder"><div class="paragraph"><div class="line"></div></div></div></td>
              <td style="width: 20%"><div class="ui placeholder"><div class="paragraph"><div class="line"></div></div></div></td>
              <td style="width: 10%"><div class="ui placeholder"><div class="paragraph"><div class="line"></div></div></div></td>
              <td style="width: 5%"><div class="ui placeholder"><div class="paragraph"><div class="line"></div></div></div></td>
            </tr>
          }
        </tbody>
      </table>
    </div>
  }
  else if (currentItems.Count() == 0)
  {
    <div class="ui message">@EmptyDataMessage</div>
  }
  else
  {
    <div id="@Id" class="@SegmentClassMapper.ToString()" style="padding: 0px;">
      <table class="@ClassMapper.ToString()">
        <thead>
          @Header
        </thead>
        <tbody>
          @foreach (var item in currentItems)
          {
            @RowTemplate(item)
          }
        </tbody>
      </table>
    </div>
    @if (AllowPaging)
    {
      <SemPagination TotalPages="totalPages" PageIndex="pageIndex" PageIndexChanged="(async (int indx) => await SetPageIndex(indx))"></SemPagination>
    }
  }
}

@code {
  [Parameter] public string SegmentClass { get; set; } = "basic";
  [Parameter] public RenderFragment Header { get; set; }
  [Parameter] public RenderFragment<ItemType> RowTemplate { get; set; }
  [Parameter] public string EmptyDataMessage { get; set; } = "No records has been found...";
  ClassMapper SegmentClassMapper { get; set; } = new ClassMapper();

  public SemDataTable()
  {
    SegmentClassMapper
    .Add("ui basic")
    .Get(() => SegmentClass)
    .If("loading", () => loading)
    .Add("segment");

    ClassMapper
    .Add("ui")
    .Add("table");
  }
}
